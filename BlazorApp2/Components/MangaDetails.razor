@page "/manga/{id}"
@inject IAnimeService animeService


    <h3 class="pageTitle">Manga Details</h3>
<section class="mangaDetails">

    @if (Manga != null)
    {
        <div class="mangaInfo">
            <h4>Title : @(string.IsNullOrEmpty(Manga.title) ? "N/A" : Manga.title)</h4>
            <h4>Volumes : @(Manga.volumes.HasValue ? Manga.volumes : "N/A")</h4>
            <h4>Chapters : @(Manga.chapters.HasValue ? Manga.chapters : "N/A")</h4>
            <h4>Background: </h4><p>@(string.IsNullOrEmpty(Manga.background) ? "N/A" : Manga.background)</p>
            <h4>Synopsis: </h4><p>@(string.IsNullOrEmpty(Manga.synopsis) ? "N/A" : Manga.synopsis)</p>
        </div>
        
        <figure class="snip1295"><img src="@Manga.image_url" alt="sample67"/>
            <div class="border one">
                <div></div>
            </div>
            <div class="border two">
                <div></div>
            </div>
        </figure>
    }
    else
    {
        <div class="spinner"></div>
    }
</section>

@code{
    [Parameter]
    public string Id { get; set; }

    public Manga Manga { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Id = Id ?? "1";
        Manga = await animeService.GetManga(int.Parse(Id));
    }
}